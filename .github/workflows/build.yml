name: build

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.png"
  pull_request:

env:
  IMAGE_NAME: eparlak/sftp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # for proper signature verification
          submodules: true # for shunit2

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: tests/shunit2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Build debian image
        run: |
          docker build . \
            --pull=true \
            --file=Dockerfile \
            --tag="$IMAGE_NAME:latest" \
            --tag="$IMAGE_NAME:debian" \
            --tag="ghcr.io/$GITHUB_REPOSITORY/debian" \
            --label="org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
            --label="org.opencontainers.image.revision=$GITHUB_SHA" \
            --label="org.opencontainers.image.created=$(date --rfc-3339=seconds)" 

      - name: Test debian image
        run: tests/run $IMAGE_NAME:debian

      - name: Build alpine image
        run: |
          docker build . \
            --pull=true \
            --file=Dockerfile-alpine \
            --tag="$IMAGE_NAME:alpine" \
            --tag="ghcr.io/$GITHUB_REPOSITORY/alpine"
            --label="org.opencontainers.image.source=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
            --label="org.opencontainers.image.revision=$GITHUB_SHA" \
            --label="org.opencontainers.image.created=$(date --rfc-3339=seconds)" 

      - name: Test alpine image
        run: tests/run $IMAGE_NAME:alpine

      - name: Verify signature
        if: github.ref == 'refs/heads/master'
        uses: atmoz/git-verify-ref@master
        with:
          import-github-users: atmoz

      - name: Push images 
        if: github.ref == 'refs/heads/master'
        run: |
          docker push --all-tags $IMAGE_NAME
          docker push ghcr.io/$GITHUB_REPOSITORY/alpine 
          docker push ghcr.io/$GITHUB_REPOSITORY/debian
          docker logout docker.pkg.github.com

